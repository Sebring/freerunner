"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[612],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(t),g=a,d=m["".concat(s,".").concat(g)]||m[g]||c[g]||i;return t?r.createElement(d,o(o({ref:n},p),{},{components:t})):r.createElement(d,o({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4709:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return p},toc:function(){return c},default:function(){return g}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],l={slug:"frerunner-0-0-1",title:"Freerunner 0.0.1",authors:["sebring"],tags:["docusaurus"]},s="Freerunner - a modern Crafty",u={permalink:"/freerunner/blog/frerunner-0-0-1",editUrl:"https://github.com/sebring/freerunner/edit/blog/2021-09-15-freerunner-first-commit.md",source:"@site/blog/2021-09-15-freerunner-first-commit.md",title:"Freerunner 0.0.1",description:"I've just published Freerunner 0.0.1 on npm!",date:"2021-09-15T00:00:00.000Z",formattedDate:"September 15, 2021",tags:[{label:"docusaurus",permalink:"/freerunner/blog/tags/docusaurus"}],readingTime:1.395,truncated:!1,authors:[{name:"Johan Sebring",title:"Developer",url:"https://github.com/sebring",imageURL:"https://github.com/sebring.png",key:"sebring"}]},p={authorsImageUrls:[void 0]},c=[{value:"Nearest milestones:",id:"nearest-milestones",children:[{value:"0.1.0 - the package",id:"010---the-package",children:[]},{value:"0.2.0 - the imports",id:"020---the-imports",children:[]},{value:"0.3.0 -- the plugins",id:"030----the-plugins",children:[]}]}],m={toc:c};function g(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"I've just published Freerunner 0.0.1 on npm!"),(0,i.kt)("p",null,"It is just a raw wrapper around ",(0,i.kt)("a",{parentName:"p",href:"http://craftyjs.com"},"crafty")," with all its glory and also all its legacy code. Little by little I will carve and shape it to my imagination of a really simple yet powerful game engine. Will the API always be compatible with Crafty? I don't know, but as long as i makes sense, it makes sense."),(0,i.kt)("h2",{id:"nearest-milestones"},"Nearest milestones:"),(0,i.kt)("h3",{id:"010---the-package"},"0.1.0 - the package"),(0,i.kt)("p",null,"A working npm-package with crafty wrapped with limited typescript support. Using an full featured game engine means a the api is big and the intellisense enabled by typescript is such a timesaver. Writing interfaces and definitions will be ongoing and I do not strive to make it complete yet but will add more support for each release."),(0,i.kt)("h3",{id:"020---the-imports"},"0.2.0 - the imports"),(0,i.kt)("p",null,"Having components as separate es modules. This will keep game code manageble as the game evolves and features are added. However it will also make reusing components even easier."),(0,i.kt)("p",null,"From:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Crafty.c('MyComponent', {\n    init: function() { /.../ },\n    events: /../\n})\n")),(0,i.kt)("p",null,"To:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import MyComponent from '/components/MyComponents'\n\nFreerunner.cc(MyComponent)\n")),(0,i.kt)("h3",{id:"030----the-plugins"},"0.3.0 -- the plugins"),(0,i.kt)("p",null,"Using a plugin should be as easy as importing it and loading it into Freerunner. A plugin should be able to add"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"components"),(0,i.kt)("li",{parentName:"ul"},"systems"),(0,i.kt)("li",{parentName:"ul"},"static resources as sprites and sounds")),(0,i.kt)("p",null,"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"\n// imaginary plugin with level generator, sprits and mini-map\nimport DungeonPlugin from 'freerunner-dungeon'\n// imaginary plugin that adds inventory support\nimport InventoryPlugin from 'freerunner-medivalitems'\n\nFreerunner.addPlugin(DungeonPlugin)\nFreerunner.addPlugin(InventoryPlugin)\n\nconst level1 = DungeonPlugin.generateLevel() // custom functions\n")),(0,i.kt)("p",null,"Plugins should have a defined way of testing and showcasing them, like a minimal demo."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn demo\n")))}g.isMDXComponent=!0}}]);