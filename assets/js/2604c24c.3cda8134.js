"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[246],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=i,v=d["".concat(p,".").concat(m)]||d[m]||s[m]||o;return t?r.createElement(v,a(a({ref:n},c),{},{components:t})):r.createElement(v,a({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6110:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],l={sidebar_position:1,title:"Intutive API"},p="Intutive API",u={unversionedId:"Overview/intutive-api",id:"Overview/intutive-api",isDocsHomePage:!1,title:"Intutive API",description:"Average time spent in the garage is 10% tinkering, 10% thinking and 80% looking for the tool you used just a second ago.",source:"@site/docs/02-Overview/intutive-api.md",sourceDirName:"02-Overview",slug:"/Overview/intutive-api",permalink:"/freerunner/docs/Overview/intutive-api",editUrl:"https://github.com/sebring/freerunner/edit/docs/02-Overview/intutive-api.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Intutive API"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/freerunner/docs/intro"},next:{title:"Installation",permalink:"/freerunner/docs/Getting Started/install"}},c=[{value:"Limited API exposure",id:"limited-api-exposure",children:[]},{value:"Evolving API",id:"evolving-api",children:[]},{value:"Event driven communication",id:"event-driven-communication",children:[]}],s={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intutive-api"},"Intutive API"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Average time spent in the garage is 10% tinkering, 10% thinking and 80% looking for the tool you used just a second ago.")),(0,o.kt)("h2",{id:"limited-api-exposure"},"Limited API exposure"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"The API will grow as your game does"),(0,o.kt)("br",{parentName:"p"}),"\n","Thanks to the ",(0,o.kt)("abbr",{title:"entity component system"},"ECS")," the API will grow as your game evoleves.\nYou won't see any sprite related functions on you entities until you add the sprite-component, you can't even set velocity unless you have added a component that enables it."),(0,o.kt)("h2",{id:"evolving-api"},"Evolving API"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"You define the API to suit your needs"),(0,o.kt)("br",{parentName:"p"}),"\n","As you create components you are also creating the API.\nTired of calculating ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," for placement in a 16 pixel grid? Define a grid component with grid size and add a ",(0,o.kt)("inlineCode",{parentName:"p"},"gridPlace")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// basic 2D\nball.x = 64\nball.y = 512\n\n// using \"grid component\"\nball.addComponent('Grid').grid(16)\nball.gridPlace(4, 32)\n")),(0,o.kt)("h2",{id:"event-driven-communication"},"Event driven communication"),(0,o.kt)("p",null,"Communication is event driven. You can trigger events on a specific entity, a set of components or globally.\nAll entities and components can trigger and bind to events, as well as the Freerunner instance for global events.\nYou will add a lot of complex features just creating different components that ",(0,o.kt)("inlineCode",{parentName:"p"},"bind")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"trigger")," different events.",(0,o.kt)("br",{parentName:"p"}),"\n","(link to event guide)"),(0,o.kt)("hr",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"player1.bind('Explode', (data) => {\n    this.hp -= data.damage\n    this.vy += power\n})\n\n// global\nF.trigger('Explode', { damage: 19, power: 34 })\n\n// component\nbomb.bind('CollideWithPlayer', (player) => {\n    if (this._hasExploded) return\n    player.trigger('Explode', { damage: 22, power: 42 })\n    this._hasExploded = true\n})\n")))}d.isMDXComponent=!0}}]);